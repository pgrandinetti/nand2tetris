// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/2/Inc16.hdl
/**
 * 16-bit incrementer:
 * out = in + 1
 */
CHIP Inc16 {
    IN in[16];
    OUT out[16];

    PARTS:
    /**
     * mask[i] <- 1 if all bits from LSB to i-th are 1
     * out[i+1] <- XOR(out[i+1], mask[i])
     */

    // MASKS:
    And(a=in[0], b=true, out=m0);
    And(a=in[1], b=in[0], out=m1);
    And(a=in[2], b=m1, out=m2);
    And(a=in[3], b=m2, out=m3);
    And(a=in[4], b=m3, out=m4);
    And(a=in[5], b=m4, out=m5);
    And(a=in[6], b=m5, out=m6);
    And(a=in[7], b=m6, out=m7);
    And(a=in[8], b=m7, out=m8);
    And(a=in[9], b=m8, out=m9);
    And(a=in[10], b=m9, out=m10);
    And(a=in[11], b=m10, out=m11);
    And(a=in[12], b=m11, out=m12);
    And(a=in[13], b=m12, out=m13);
    And(a=in[14], b=m13, out=m14);

    // OUT:
    Not(in=in[0], out=out[0]);
    Xor(a=in[1], b=m0, out=out[1]);
    Xor(a=in[2], b=m1, out=out[2]);
    Xor(a=in[3], b=m2, out=out[3]);
    Xor(a=in[4], b=m3, out=out[4]);
    Xor(a=in[5], b=m4, out=out[5]);
    Xor(a=in[6], b=m5, out=out[6]);
    Xor(a=in[7], b=m6, out=out[7]);
    Xor(a=in[8], b=m7, out=out[8]);
    Xor(a=in[9], b=m8, out=out[9]);
    Xor(a=in[10], b=m9, out=out[10]);
    Xor(a=in[11], b=m10, out=out[11]);
    Xor(a=in[12], b=m11, out=out[12]);
    Xor(a=in[13], b=m12, out=out[13]);
    Xor(a=in[14], b=m13, out=out[14]);
    Xor(a=in[15], b=m14, out=out[15]);
}
